{
  "_args": [
    [
      {
        "raw": "customizr@https://github.com/doctyper/customizr/tarball/develop",
        "scope": null,
        "escapedName": "customizr",
        "name": "customizr",
        "rawSpec": "https://github.com/doctyper/customizr/tarball/develop",
        "spec": "https://github.com/doctyper/customizr/tarball/develop",
        "type": "remote"
      },
      "/Users/dwatson1/post_scratch/stevens/docroot/sites/all/themes/stevens/components/formstone/node_modules/grunt-modernizr"
    ]
  ],
  "_from": "https://github.com/doctyper/customizr/tarball/develop",
  "_id": "customizr@1.0.0-alpha",
  "_inCache": true,
  "_installable": true,
  "_location": "/customizr",
  "_phantomChildren": {
    "abbrev": "1.1.0",
    "hooker": "0.2.3",
    "inherits": "2.0.3",
    "lru-cache": "2.7.3",
    "sigmund": "1.0.1"
  },
  "_requested": {
    "raw": "customizr@https://github.com/doctyper/customizr/tarball/develop",
    "scope": null,
    "escapedName": "customizr",
    "name": "customizr",
    "rawSpec": "https://github.com/doctyper/customizr/tarball/develop",
    "spec": "https://github.com/doctyper/customizr/tarball/develop",
    "type": "remote"
  },
  "_requiredBy": [
    "/grunt-modernizr"
  ],
  "_resolved": "https://github.com/doctyper/customizr/tarball/develop",
  "_shasum": "75b0a85e5de99918bb6219227b283002f87546f1",
  "_shrinkwrap": null,
  "_spec": "customizr@https://github.com/doctyper/customizr/tarball/develop",
  "_where": "/Users/dwatson1/post_scratch/stevens/docroot/sites/all/themes/stevens/components/formstone/node_modules/grunt-modernizr",
  "author": {
    "name": "Richard Herrera"
  },
  "bin": {
    "customizr": "bin/customizr"
  },
  "bugs": {
    "url": "https://github.com/doctyper/customizr/issues"
  },
  "dependencies": {
    "colors": "~0.6.2",
    "deep-equal": "~0.1.2",
    "glob": "~3.2.8",
    "grunt-legacy-log": "~0.1.1",
    "mkdirp": "~0.3.5",
    "modernizr": "^3.0.0-alpha",
    "nopt": "~2.1.2",
    "optimist": "~0.6.0",
    "promised-io": "~0.3.4",
    "underscore": "~1.5.2",
    "win-spawn": "^2.0.0"
  },
  "description": "[![Build Status](https://secure.travis-ci.org/doctyper/customizr.png?branch=master,develop)](https://travis-ci.org/doctyper/customizr)",
  "devDependencies": {
    "expect.js": "~0.2.0",
    "fs-extra": "^0.11.1",
    "mocha": "~1.14.0",
    "nexpect": "^0.5.0"
  },
  "homepage": "https://github.com/doctyper/customizr",
  "keywords": [
    "modernizr",
    "customizr"
  ],
  "license": "MIT",
  "main": "src",
  "name": "customizr",
  "optionalDependencies": {},
  "readme": "# customizr\n\n[![Build Status](https://secure.travis-ci.org/doctyper/customizr.png?branch=master,develop)](https://travis-ci.org/doctyper/customizr)\n\n[![NPM](https://nodei.co/npm/customizr.png?compact=true)](https://nodei.co/npm/customizr/)\n\n##### *tl;dr:* This tool crawls through your project files, gathers up your references to Modernizr tests and outputs a lean, mean Modernizr machine.\n\n`customizr` is a Modernizr builder for your project. It is based on the Modernizr team's [Modulizr](https://github.com/Modernizr/modernizr.com/blob/gh-pages/i/js/modulizr.js) tool.\n\nThis configurable task allows you to configure and export a custom Modernizr build. Use Modernizr's [annotated source](http://modernizr.com/downloads/modernizr-latest.js) for development, and let this tool worry about optimization.\n\nWhen you're ready to build, `customizr` will crawl your project for Modernizr test references and save out a minified, uglified, customized version using only the tests you've used in your JavaScript or (S)CSS.\n\n## Use with Grunt\n\nA Grunt wrapper is available at: [https://github.com/Modernizr/grunt-modernizr](https://github.com/Modernizr/grunt-modernizr)\n\n## Use with Gulp\n\nA Gulp wrapper is available at: [https://github.com/doctyper/gulp-modernizr](https://github.com/doctyper/gulp-modernizr)\n\n## Getting Started\n\nInstall with npm: `npm install --save customizr`\n\n## Documentation\n\n### Command Line\n\n```\n./node-modules/.bin/customizr -c path/to/config\n```\n\n### Command Line Options\n\n```\n-h, --help           # Print options and usage\n-v, --version        # Print the version number\n-c, --config         # Path to your Modernizr config JSON file\n-f, --force          # Ignore cached versions and force build Modernizr\n```\n\n#### Config File\n\nA sample config file is below. Default values shown:\n\n```javascript\n{\n\t// Avoid unnecessary builds (see Caching section below)\n\t\"cache\" : true,\n\n\t// Path to the build you're using for development.\n\t\"devFile\" : false,\n\n\t// Path to save out the built file\n\t\"dest\" : false,\n\n\t// Based on default settings on http://modernizr.com/download/\n\t\"options\" : [\n\t\t\"setClasses\",\n\t\t\"addTest\",\n\t\t\"html5printshiv\",\n\t\t\"testProp\",\n\t\t\"fnBind\"\n\t],\n\n\t// By default, source is uglified before saving\n\t\"uglify\" : true,\n\n\t// Define any tests you want to explicitly include\n\t\"tests\" : [],\n\n\t// Useful for excluding any tests that this tool will match\n\t// e.g. you use .notification class for notification elements,\n\t// but don’t want the test for Notification API\n\t\"excludeTests\": [],\n\n\t// By default, will crawl your project for references to Modernizr tests\n\t// Set to false to disable\n\t\"crawl\" : true,\n\n\t// Set to true to pass in buffers via the \"files\" parameter below\n\t\"useBuffers\" : false,\n\n\t// By default, this task will crawl all *.js, *.css, *.scss files.\n\t\"files\" : {\n\t\t\"src\": [\n\t\t\t\"*[^(g|G)runt(file)?].{js,css,scss}\",\n\t\t\t\"**[^node_modules]/**/*.{js,css,scss}\",\n\t\t\t\"!lib/**/*\"\n\t\t]\n\t},\n\n\t// Have custom Modernizr tests? Add them here.\n\t\"customTests\" : []\n}\n```\n\n###### **`cache`** (Boolean, optional)\nWhen true, `customizr` will avoid the expensive build process if a certain criteria is met (see [Caching](#caching) section below)\n\n###### **`devFile`** (String, optional)\nPath to the local build file you're using for development. This parameter is needed so `customizr` can skip your dev file when traversing your project to avoid triggering false positives. If you're using a remote file for development, set this option to `remote`.\n\nThis is an optional parameter. If you do not have a local devFile, set this option to `false`. Note that if this parameter is false and you have a local development file, it will find all Modernizr references from this file and will defeat the purpose of this tool.\n\n###### **`dest`** (String, optional)\nPath to save the customized Modernizr build. It defaults to `lib/modernizr-custom.js`.\n\nThis is an optional parameter. If undefined or falsy, `customizr` will return the result as a string and will not write to disk.\n\n###### **`options`** (Object, optional)\nAn object of extra configuration options. Check the extra section on [modernizr.com/download](http://modernizr.com/download/) for complete options. Defaults are as they appear on the official site.\n\nThis is an optional parameter.\n\n###### **`uglify`** (Boolean, optional)\nBy default, the source is uglified before save. Set to false to disable.\n\nThis is an optional parameter.\n\n###### **`tests`** (Array, optional)\nDefine any tests you want to explicitly include. Check out the full set of test options [here](#ADD_LINK_LATER).\n\nThis is an optional parameter.\n\n###### **`excludeTests`** (Array, optional)\nUseful for excluding any tests that this tool will match. (e.g. you use .notification class for notification elements, but don’t want the test for Notification API).\n\nThis is an optional parameter.\n\n###### **`crawl`** (Boolean, optional)\nBy default, this task will crawl your project for references to Modernizr tests. Set to false to disable.\n\nThis is an optional parameter.\n\n###### **`useBuffers`** (Boolean, optional)\nWhen `true`, the `files` parameter will accept an array of buffers in lieu of lookup strings.\n\n###### **`files.src`** (Array, optional)\nWhen `crawl` = `true`, this task will crawl all `*.js`, `*.css`, `*.scss` files. You can override this by defining a custom `files.src` array. The object supports either:\n\n- An array of all [minimatch](https://github.com/isaacs/minimatch) options\n- An array of [Vinyl-style](https://github.com/wearefractal/vinyl) File buffers. `useBuffers` must be `true` to enable this functionality.\n\nThis is an optional parameter.\n\n###### **`customTests`** (Array, optional)\nHave custom Modernizr tests? Add paths to their location here. The object supports all [minimatch](https://github.com/isaacs/minimatch) options.\n\nThis is an optional parameter.\n\n## Caching\n\nFor large projects, building a custom Modernizr file can be an expensive task. `customizr` does its best to avoid unnecessary builds by following a set criteria. When all of the following are met, it assumes that no changes are necessary:\n\n- If `customizr` has been previously run *AND*\n- If [`settings.cache`](#cache-boolean-optional) is true *AND*\n- If [`settings.dest`](#dest-string-optional) exists and is identical to the previous build *AND*\n- If the `customizr` version is identical to the previous build *AND*\n- If the `modernizr` dependency is identical to the previous build *AND*\n- If the current [`customizr` settings](#config-file) are identical to the previous build *THEN*\n\n`customizr` returns the cached data found in [`settings.dest`](#dest-string-optional)\n\n- If any of the preceding rules are falsy, the cache is invalidated.\n- If [`settings.cache`](#cache-boolean-optional) is falsy, the cache is invalidated.\n- If [`settings.dest`](#dest-string-optional) is not defined, the cache is invalidated.\n\n## Programmatic API\n\n### require(\"customizr\")(settings, callback)\n\n- `settings` — A settings object as described above in \"Config File\".\n- `callback` — A callback to execute when the task is finished\n\nYou can use `customizr` directly in your app if you prefer to not rely on the binary.\n\n```js\nvar modernizr = require(\"customizr\");\n\nvar settings = {\n\t\"cache\" : true,\n\t\"devFile\" : false,\n\t\"dest\" : false,\n\t\"options\" : [\n\t\t\"setClasses\",\n\t\t\"addTest\",\n\t\t\"html5printshiv\",\n\t\t\"testProp\",\n\t\t\"fnBind\"\n\t],\n\t\"uglify\" : true,\n\t\"tests\" : [],\n\t\"excludeTests\": [],\n\t\"crawl\" : true,\n\t\"useBuffers\": false,\n\t\"files\" : {\n\t\t\"src\": [\n\t\t\t\"*[^(g|G)runt(file)?].{js,css,scss}\",\n\t\t\t\"**[^node_modules]/**/*.{js,css,scss}\",\n\t\t\t\"!lib/**/*\"\n\t\t]\n\t},\n\t\"customTests\" : []\n};\n\nmodernizr(settings, function () {\n\t// all done!\n});\n```\n\n## License\nCopyright (c) 2013 Richard Herrera\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/doctyper/customizr.git"
  },
  "scripts": {
    "postinstall": "node scripts/postinstall.js",
    "pretest": "node test/pretest.js",
    "test": "node test/runner.js"
  },
  "version": "1.0.0-alpha"
}
